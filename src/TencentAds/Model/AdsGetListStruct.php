<?php
/**
 * AdsGetListStruct
 *
 * PHP version 5
 *
 * @category Class
 * @package  TencentAds
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Marketing API
 *
 * Marketing API
 *
 * OpenAPI spec version: 1.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.13
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace TencentAds\Model;

use \ArrayAccess;
use \TencentAds\ObjectSerializer;

/**
 * AdsGetListStruct Class Doc Comment
 *
 * @category Class
 * @description 返回结构
 * @package  TencentAds
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class AdsGetListStruct implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'ads_get_list_struct';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'campaignId' => 'int',
        'adgroupId' => 'int',
        'adId' => 'int',
        'adName' => 'string',
        'adcreativeId' => 'int',
        'adcreative' => '\TencentAds\Model\AdAdcreative',
        'dynamicCreativeTemplateId' => 'int',
        'dynamicCreativeMaterialLabel' => 'string',
        'configuredStatus' => '\TencentAds\Model\ConfiguredStatus',
        'systemStatus' => 'string',
        'auditSpec' => '\TencentAds\Model\AdAuditSpecStruct[]',
        'impressionTrackingUrl' => 'string',
        'clickTrackingUrl' => 'string',
        'feedsInteractionEnabled' => 'bool',
        'auditMessage' => 'string',
        'isDeleted' => 'bool',
        'isDynamicCreative' => 'bool',
        'createdTime' => 'int',
        'lastModifiedTime' => 'int',
        'dateSet' => '\TencentAds\Model\AdDateSetStruct[]',
        'impressionTrackingUrl2' => 'string',
        'clickTrackingUrl2' => 'string',
        'trackingSpecConfig' => '\TencentAds\Model\AdTrackingSpecConfig'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'campaignId' => 'int64',
        'adgroupId' => 'int64',
        'adId' => 'int64',
        'adName' => null,
        'adcreativeId' => 'int64',
        'adcreative' => null,
        'dynamicCreativeTemplateId' => 'int64',
        'dynamicCreativeMaterialLabel' => null,
        'configuredStatus' => null,
        'systemStatus' => null,
        'auditSpec' => null,
        'impressionTrackingUrl' => null,
        'clickTrackingUrl' => null,
        'feedsInteractionEnabled' => null,
        'auditMessage' => null,
        'isDeleted' => null,
        'isDynamicCreative' => null,
        'createdTime' => 'int64',
        'lastModifiedTime' => 'int64',
        'dateSet' => null,
        'impressionTrackingUrl2' => null,
        'clickTrackingUrl2' => null,
        'trackingSpecConfig' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'campaignId' => 'campaign_id',
        'adgroupId' => 'adgroup_id',
        'adId' => 'ad_id',
        'adName' => 'ad_name',
        'adcreativeId' => 'adcreative_id',
        'adcreative' => 'adcreative',
        'dynamicCreativeTemplateId' => 'dynamic_creative_template_id',
        'dynamicCreativeMaterialLabel' => 'dynamic_creative_material_label',
        'configuredStatus' => 'configured_status',
        'systemStatus' => 'system_status',
        'auditSpec' => 'audit_spec',
        'impressionTrackingUrl' => 'impression_tracking_url',
        'clickTrackingUrl' => 'click_tracking_url',
        'feedsInteractionEnabled' => 'feeds_interaction_enabled',
        'auditMessage' => 'audit_message',
        'isDeleted' => 'is_deleted',
        'isDynamicCreative' => 'is_dynamic_creative',
        'createdTime' => 'created_time',
        'lastModifiedTime' => 'last_modified_time',
        'dateSet' => 'date_set',
        'impressionTrackingUrl2' => 'impression_tracking_url2',
        'clickTrackingUrl2' => 'click_tracking_url2',
        'trackingSpecConfig' => 'tracking_spec_config'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'campaignId' => 'setCampaignId',
        'adgroupId' => 'setAdgroupId',
        'adId' => 'setAdId',
        'adName' => 'setAdName',
        'adcreativeId' => 'setAdcreativeId',
        'adcreative' => 'setAdcreative',
        'dynamicCreativeTemplateId' => 'setDynamicCreativeTemplateId',
        'dynamicCreativeMaterialLabel' => 'setDynamicCreativeMaterialLabel',
        'configuredStatus' => 'setConfiguredStatus',
        'systemStatus' => 'setSystemStatus',
        'auditSpec' => 'setAuditSpec',
        'impressionTrackingUrl' => 'setImpressionTrackingUrl',
        'clickTrackingUrl' => 'setClickTrackingUrl',
        'feedsInteractionEnabled' => 'setFeedsInteractionEnabled',
        'auditMessage' => 'setAuditMessage',
        'isDeleted' => 'setIsDeleted',
        'isDynamicCreative' => 'setIsDynamicCreative',
        'createdTime' => 'setCreatedTime',
        'lastModifiedTime' => 'setLastModifiedTime',
        'dateSet' => 'setDateSet',
        'impressionTrackingUrl2' => 'setImpressionTrackingUrl2',
        'clickTrackingUrl2' => 'setClickTrackingUrl2',
        'trackingSpecConfig' => 'setTrackingSpecConfig'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'campaignId' => 'getCampaignId',
        'adgroupId' => 'getAdgroupId',
        'adId' => 'getAdId',
        'adName' => 'getAdName',
        'adcreativeId' => 'getAdcreativeId',
        'adcreative' => 'getAdcreative',
        'dynamicCreativeTemplateId' => 'getDynamicCreativeTemplateId',
        'dynamicCreativeMaterialLabel' => 'getDynamicCreativeMaterialLabel',
        'configuredStatus' => 'getConfiguredStatus',
        'systemStatus' => 'getSystemStatus',
        'auditSpec' => 'getAuditSpec',
        'impressionTrackingUrl' => 'getImpressionTrackingUrl',
        'clickTrackingUrl' => 'getClickTrackingUrl',
        'feedsInteractionEnabled' => 'getFeedsInteractionEnabled',
        'auditMessage' => 'getAuditMessage',
        'isDeleted' => 'getIsDeleted',
        'isDynamicCreative' => 'getIsDynamicCreative',
        'createdTime' => 'getCreatedTime',
        'lastModifiedTime' => 'getLastModifiedTime',
        'dateSet' => 'getDateSet',
        'impressionTrackingUrl2' => 'getImpressionTrackingUrl2',
        'clickTrackingUrl2' => 'getClickTrackingUrl2',
        'trackingSpecConfig' => 'getTrackingSpecConfig'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['campaignId'] = isset($data['campaignId']) ? $data['campaignId'] : null;
        $this->container['adgroupId'] = isset($data['adgroupId']) ? $data['adgroupId'] : null;
        $this->container['adId'] = isset($data['adId']) ? $data['adId'] : null;
        $this->container['adName'] = isset($data['adName']) ? $data['adName'] : null;
        $this->container['adcreativeId'] = isset($data['adcreativeId']) ? $data['adcreativeId'] : null;
        $this->container['adcreative'] = isset($data['adcreative']) ? $data['adcreative'] : null;
        $this->container['dynamicCreativeTemplateId'] = isset($data['dynamicCreativeTemplateId']) ? $data['dynamicCreativeTemplateId'] : null;
        $this->container['dynamicCreativeMaterialLabel'] = isset($data['dynamicCreativeMaterialLabel']) ? $data['dynamicCreativeMaterialLabel'] : null;
        $this->container['configuredStatus'] = isset($data['configuredStatus']) ? $data['configuredStatus'] : null;
        $this->container['systemStatus'] = isset($data['systemStatus']) ? $data['systemStatus'] : null;
        $this->container['auditSpec'] = isset($data['auditSpec']) ? $data['auditSpec'] : null;
        $this->container['impressionTrackingUrl'] = isset($data['impressionTrackingUrl']) ? $data['impressionTrackingUrl'] : null;
        $this->container['clickTrackingUrl'] = isset($data['clickTrackingUrl']) ? $data['clickTrackingUrl'] : null;
        $this->container['feedsInteractionEnabled'] = isset($data['feedsInteractionEnabled']) ? $data['feedsInteractionEnabled'] : null;
        $this->container['auditMessage'] = isset($data['auditMessage']) ? $data['auditMessage'] : null;
        $this->container['isDeleted'] = isset($data['isDeleted']) ? $data['isDeleted'] : null;
        $this->container['isDynamicCreative'] = isset($data['isDynamicCreative']) ? $data['isDynamicCreative'] : null;
        $this->container['createdTime'] = isset($data['createdTime']) ? $data['createdTime'] : null;
        $this->container['lastModifiedTime'] = isset($data['lastModifiedTime']) ? $data['lastModifiedTime'] : null;
        $this->container['dateSet'] = isset($data['dateSet']) ? $data['dateSet'] : null;
        $this->container['impressionTrackingUrl2'] = isset($data['impressionTrackingUrl2']) ? $data['impressionTrackingUrl2'] : null;
        $this->container['clickTrackingUrl2'] = isset($data['clickTrackingUrl2']) ? $data['clickTrackingUrl2'] : null;
        $this->container['trackingSpecConfig'] = isset($data['trackingSpecConfig']) ? $data['trackingSpecConfig'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets campaignId
     *
     * @return int
     */
    public function getCampaignId()
    {
        return $this->container['campaignId'];
    }

    /**
     * Sets campaignId
     *
     * @param int $campaignId campaignId
     *
     * @return $this
     */
    public function setCampaignId($campaignId)
    {
        $this->container['campaignId'] = $campaignId;

        return $this;
    }

    /**
     * Gets adgroupId
     *
     * @return int
     */
    public function getAdgroupId()
    {
        return $this->container['adgroupId'];
    }

    /**
     * Sets adgroupId
     *
     * @param int $adgroupId adgroupId
     *
     * @return $this
     */
    public function setAdgroupId($adgroupId)
    {
        $this->container['adgroupId'] = $adgroupId;

        return $this;
    }

    /**
     * Gets adId
     *
     * @return int
     */
    public function getAdId()
    {
        return $this->container['adId'];
    }

    /**
     * Sets adId
     *
     * @param int $adId adId
     *
     * @return $this
     */
    public function setAdId($adId)
    {
        $this->container['adId'] = $adId;

        return $this;
    }

    /**
     * Gets adName
     *
     * @return string
     */
    public function getAdName()
    {
        return $this->container['adName'];
    }

    /**
     * Sets adName
     *
     * @param string $adName adName
     *
     * @return $this
     */
    public function setAdName($adName)
    {
        $this->container['adName'] = $adName;

        return $this;
    }

    /**
     * Gets adcreativeId
     *
     * @return int
     */
    public function getAdcreativeId()
    {
        return $this->container['adcreativeId'];
    }

    /**
     * Sets adcreativeId
     *
     * @param int $adcreativeId adcreativeId
     *
     * @return $this
     */
    public function setAdcreativeId($adcreativeId)
    {
        $this->container['adcreativeId'] = $adcreativeId;

        return $this;
    }

    /**
     * Gets adcreative
     *
     * @return \TencentAds\Model\AdAdcreative
     */
    public function getAdcreative()
    {
        return $this->container['adcreative'];
    }

    /**
     * Sets adcreative
     *
     * @param \TencentAds\Model\AdAdcreative $adcreative adcreative
     *
     * @return $this
     */
    public function setAdcreative($adcreative)
    {
        $this->container['adcreative'] = $adcreative;

        return $this;
    }

    /**
     * Gets dynamicCreativeTemplateId
     *
     * @return int
     */
    public function getDynamicCreativeTemplateId()
    {
        return $this->container['dynamicCreativeTemplateId'];
    }

    /**
     * Sets dynamicCreativeTemplateId
     *
     * @param int $dynamicCreativeTemplateId dynamicCreativeTemplateId
     *
     * @return $this
     */
    public function setDynamicCreativeTemplateId($dynamicCreativeTemplateId)
    {
        $this->container['dynamicCreativeTemplateId'] = $dynamicCreativeTemplateId;

        return $this;
    }

    /**
     * Gets dynamicCreativeMaterialLabel
     *
     * @return string
     */
    public function getDynamicCreativeMaterialLabel()
    {
        return $this->container['dynamicCreativeMaterialLabel'];
    }

    /**
     * Sets dynamicCreativeMaterialLabel
     *
     * @param string $dynamicCreativeMaterialLabel dynamicCreativeMaterialLabel
     *
     * @return $this
     */
    public function setDynamicCreativeMaterialLabel($dynamicCreativeMaterialLabel)
    {
        $this->container['dynamicCreativeMaterialLabel'] = $dynamicCreativeMaterialLabel;

        return $this;
    }

    /**
     * Gets configuredStatus
     *
     * @return \TencentAds\Model\ConfiguredStatus
     */
    public function getConfiguredStatus()
    {
        return $this->container['configuredStatus'];
    }

    /**
     * Sets configuredStatus
     *
     * @param \TencentAds\Model\ConfiguredStatus $configuredStatus configuredStatus
     *
     * @return $this
     */
    public function setConfiguredStatus($configuredStatus)
    {
        $this->container['configuredStatus'] = $configuredStatus;

        return $this;
    }

    /**
     * Gets systemStatus
     *
     * @return string
     */
    public function getSystemStatus()
    {
        return $this->container['systemStatus'];
    }

    /**
     * Sets systemStatus
     *
     * @param string $systemStatus systemStatus
     *
     * @return $this
     */
    public function setSystemStatus($systemStatus)
    {
        $this->container['systemStatus'] = $systemStatus;

        return $this;
    }

    /**
     * Gets auditSpec
     *
     * @return \TencentAds\Model\AdAuditSpecStruct[]
     */
    public function getAuditSpec()
    {
        return $this->container['auditSpec'];
    }

    /**
     * Sets auditSpec
     *
     * @param \TencentAds\Model\AdAuditSpecStruct[] $auditSpec auditSpec
     *
     * @return $this
     */
    public function setAuditSpec($auditSpec)
    {
        $this->container['auditSpec'] = $auditSpec;

        return $this;
    }

    /**
     * Gets impressionTrackingUrl
     *
     * @return string
     */
    public function getImpressionTrackingUrl()
    {
        return $this->container['impressionTrackingUrl'];
    }

    /**
     * Sets impressionTrackingUrl
     *
     * @param string $impressionTrackingUrl impressionTrackingUrl
     *
     * @return $this
     */
    public function setImpressionTrackingUrl($impressionTrackingUrl)
    {
        $this->container['impressionTrackingUrl'] = $impressionTrackingUrl;

        return $this;
    }

    /**
     * Gets clickTrackingUrl
     *
     * @return string
     */
    public function getClickTrackingUrl()
    {
        return $this->container['clickTrackingUrl'];
    }

    /**
     * Sets clickTrackingUrl
     *
     * @param string $clickTrackingUrl clickTrackingUrl
     *
     * @return $this
     */
    public function setClickTrackingUrl($clickTrackingUrl)
    {
        $this->container['clickTrackingUrl'] = $clickTrackingUrl;

        return $this;
    }

    /**
     * Gets feedsInteractionEnabled
     *
     * @return bool
     */
    public function getFeedsInteractionEnabled()
    {
        return $this->container['feedsInteractionEnabled'];
    }

    /**
     * Sets feedsInteractionEnabled
     *
     * @param bool $feedsInteractionEnabled feedsInteractionEnabled
     *
     * @return $this
     */
    public function setFeedsInteractionEnabled($feedsInteractionEnabled)
    {
        $this->container['feedsInteractionEnabled'] = $feedsInteractionEnabled;

        return $this;
    }

    /**
     * Gets auditMessage
     *
     * @return string
     */
    public function getAuditMessage()
    {
        return $this->container['auditMessage'];
    }

    /**
     * Sets auditMessage
     *
     * @param string $auditMessage auditMessage
     *
     * @return $this
     */
    public function setAuditMessage($auditMessage)
    {
        $this->container['auditMessage'] = $auditMessage;

        return $this;
    }

    /**
     * Gets isDeleted
     *
     * @return bool
     */
    public function getIsDeleted()
    {
        return $this->container['isDeleted'];
    }

    /**
     * Sets isDeleted
     *
     * @param bool $isDeleted isDeleted
     *
     * @return $this
     */
    public function setIsDeleted($isDeleted)
    {
        $this->container['isDeleted'] = $isDeleted;

        return $this;
    }

    /**
     * Gets isDynamicCreative
     *
     * @return bool
     */
    public function getIsDynamicCreative()
    {
        return $this->container['isDynamicCreative'];
    }

    /**
     * Sets isDynamicCreative
     *
     * @param bool $isDynamicCreative isDynamicCreative
     *
     * @return $this
     */
    public function setIsDynamicCreative($isDynamicCreative)
    {
        $this->container['isDynamicCreative'] = $isDynamicCreative;

        return $this;
    }

    /**
     * Gets createdTime
     *
     * @return int
     */
    public function getCreatedTime()
    {
        return $this->container['createdTime'];
    }

    /**
     * Sets createdTime
     *
     * @param int $createdTime createdTime
     *
     * @return $this
     */
    public function setCreatedTime($createdTime)
    {
        $this->container['createdTime'] = $createdTime;

        return $this;
    }

    /**
     * Gets lastModifiedTime
     *
     * @return int
     */
    public function getLastModifiedTime()
    {
        return $this->container['lastModifiedTime'];
    }

    /**
     * Sets lastModifiedTime
     *
     * @param int $lastModifiedTime lastModifiedTime
     *
     * @return $this
     */
    public function setLastModifiedTime($lastModifiedTime)
    {
        $this->container['lastModifiedTime'] = $lastModifiedTime;

        return $this;
    }

    /**
     * Gets dateSet
     *
     * @return \TencentAds\Model\AdDateSetStruct[]
     */
    public function getDateSet()
    {
        return $this->container['dateSet'];
    }

    /**
     * Sets dateSet
     *
     * @param \TencentAds\Model\AdDateSetStruct[] $dateSet dateSet
     *
     * @return $this
     */
    public function setDateSet($dateSet)
    {
        $this->container['dateSet'] = $dateSet;

        return $this;
    }

    /**
     * Gets impressionTrackingUrl2
     *
     * @return string
     */
    public function getImpressionTrackingUrl2()
    {
        return $this->container['impressionTrackingUrl2'];
    }

    /**
     * Sets impressionTrackingUrl2
     *
     * @param string $impressionTrackingUrl2 impressionTrackingUrl2
     *
     * @return $this
     */
    public function setImpressionTrackingUrl2($impressionTrackingUrl2)
    {
        $this->container['impressionTrackingUrl2'] = $impressionTrackingUrl2;

        return $this;
    }

    /**
     * Gets clickTrackingUrl2
     *
     * @return string
     */
    public function getClickTrackingUrl2()
    {
        return $this->container['clickTrackingUrl2'];
    }

    /**
     * Sets clickTrackingUrl2
     *
     * @param string $clickTrackingUrl2 clickTrackingUrl2
     *
     * @return $this
     */
    public function setClickTrackingUrl2($clickTrackingUrl2)
    {
        $this->container['clickTrackingUrl2'] = $clickTrackingUrl2;

        return $this;
    }

    /**
     * Gets trackingSpecConfig
     *
     * @return \TencentAds\Model\AdTrackingSpecConfig
     */
    public function getTrackingSpecConfig()
    {
        return $this->container['trackingSpecConfig'];
    }

    /**
     * Sets trackingSpecConfig
     *
     * @param \TencentAds\Model\AdTrackingSpecConfig $trackingSpecConfig trackingSpecConfig
     *
     * @return $this
     */
    public function setTrackingSpecConfig($trackingSpecConfig)
    {
        $this->container['trackingSpecConfig'] = $trackingSpecConfig;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


