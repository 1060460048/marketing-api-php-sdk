<?php
/**
 * LeadsGetListStruct
 *
 * PHP version 5
 *
 * @category Class
 * @package  TencentAds
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Marketing API
 *
 * Marketing API
 *
 * OpenAPI spec version: 1.3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.13
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace TencentAds\Model;

use \ArrayAccess;
use \TencentAds\ObjectSerializer;

/**
 * LeadsGetListStruct Class Doc Comment
 *
 * @category Class
 * @description 返回结构
 * @package  TencentAds
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class LeadsGetListStruct implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'LeadsGetListStruct';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'campaignId' => 'int',
        'campaignName' => 'string',
        'adgroupId' => 'int',
        'adgroupName' => 'string',
        'wechatAdgroupId' => 'int',
        'leadSpecList' => '\TencentAds\Model\LeadsInfoStruct[]',
        'wechatCampaignId' => 'int',
        'wechatCampaignName' => 'string',
        'wechatAdgroupName' => 'string',
        'wechatAgencyId' => 'string',
        'wechatAgencyName' => 'string',
        'clickId' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'campaignId' => 'int64',
        'campaignName' => null,
        'adgroupId' => 'int64',
        'adgroupName' => null,
        'wechatAdgroupId' => 'int64',
        'leadSpecList' => null,
        'wechatCampaignId' => 'int64',
        'wechatCampaignName' => null,
        'wechatAdgroupName' => null,
        'wechatAgencyId' => null,
        'wechatAgencyName' => null,
        'clickId' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'campaignId' => 'campaign_id',
        'campaignName' => 'campaign_name',
        'adgroupId' => 'adgroup_id',
        'adgroupName' => 'adgroup_name',
        'wechatAdgroupId' => 'wechat_adgroup_id',
        'leadSpecList' => 'lead_spec_list',
        'wechatCampaignId' => 'wechat_campaign_id',
        'wechatCampaignName' => 'wechat_campaign_name',
        'wechatAdgroupName' => 'wechat_adgroup_name',
        'wechatAgencyId' => 'wechat_agency_id',
        'wechatAgencyName' => 'wechat_agency_name',
        'clickId' => 'click_id'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'campaignId' => 'setCampaignId',
        'campaignName' => 'setCampaignName',
        'adgroupId' => 'setAdgroupId',
        'adgroupName' => 'setAdgroupName',
        'wechatAdgroupId' => 'setWechatAdgroupId',
        'leadSpecList' => 'setLeadSpecList',
        'wechatCampaignId' => 'setWechatCampaignId',
        'wechatCampaignName' => 'setWechatCampaignName',
        'wechatAdgroupName' => 'setWechatAdgroupName',
        'wechatAgencyId' => 'setWechatAgencyId',
        'wechatAgencyName' => 'setWechatAgencyName',
        'clickId' => 'setClickId'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'campaignId' => 'getCampaignId',
        'campaignName' => 'getCampaignName',
        'adgroupId' => 'getAdgroupId',
        'adgroupName' => 'getAdgroupName',
        'wechatAdgroupId' => 'getWechatAdgroupId',
        'leadSpecList' => 'getLeadSpecList',
        'wechatCampaignId' => 'getWechatCampaignId',
        'wechatCampaignName' => 'getWechatCampaignName',
        'wechatAdgroupName' => 'getWechatAdgroupName',
        'wechatAgencyId' => 'getWechatAgencyId',
        'wechatAgencyName' => 'getWechatAgencyName',
        'clickId' => 'getClickId'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['campaignId'] = isset($data['campaignId']) ? $data['campaignId'] : null;
        $this->container['campaignName'] = isset($data['campaignName']) ? $data['campaignName'] : null;
        $this->container['adgroupId'] = isset($data['adgroupId']) ? $data['adgroupId'] : null;
        $this->container['adgroupName'] = isset($data['adgroupName']) ? $data['adgroupName'] : null;
        $this->container['wechatAdgroupId'] = isset($data['wechatAdgroupId']) ? $data['wechatAdgroupId'] : null;
        $this->container['leadSpecList'] = isset($data['leadSpecList']) ? $data['leadSpecList'] : null;
        $this->container['wechatCampaignId'] = isset($data['wechatCampaignId']) ? $data['wechatCampaignId'] : null;
        $this->container['wechatCampaignName'] = isset($data['wechatCampaignName']) ? $data['wechatCampaignName'] : null;
        $this->container['wechatAdgroupName'] = isset($data['wechatAdgroupName']) ? $data['wechatAdgroupName'] : null;
        $this->container['wechatAgencyId'] = isset($data['wechatAgencyId']) ? $data['wechatAgencyId'] : null;
        $this->container['wechatAgencyName'] = isset($data['wechatAgencyName']) ? $data['wechatAgencyName'] : null;
        $this->container['clickId'] = isset($data['clickId']) ? $data['clickId'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets campaignId
     *
     * @return int
     */
    public function getCampaignId()
    {
        return $this->container['campaignId'];
    }

    /**
     * Sets campaignId
     *
     * @param int $campaignId campaignId
     *
     * @return $this
     */
    public function setCampaignId($campaignId)
    {
        $this->container['campaignId'] = $campaignId;

        return $this;
    }

    /**
     * Gets campaignName
     *
     * @return string
     */
    public function getCampaignName()
    {
        return $this->container['campaignName'];
    }

    /**
     * Sets campaignName
     *
     * @param string $campaignName campaignName
     *
     * @return $this
     */
    public function setCampaignName($campaignName)
    {
        $this->container['campaignName'] = $campaignName;

        return $this;
    }

    /**
     * Gets adgroupId
     *
     * @return int
     */
    public function getAdgroupId()
    {
        return $this->container['adgroupId'];
    }

    /**
     * Sets adgroupId
     *
     * @param int $adgroupId adgroupId
     *
     * @return $this
     */
    public function setAdgroupId($adgroupId)
    {
        $this->container['adgroupId'] = $adgroupId;

        return $this;
    }

    /**
     * Gets adgroupName
     *
     * @return string
     */
    public function getAdgroupName()
    {
        return $this->container['adgroupName'];
    }

    /**
     * Sets adgroupName
     *
     * @param string $adgroupName adgroupName
     *
     * @return $this
     */
    public function setAdgroupName($adgroupName)
    {
        $this->container['adgroupName'] = $adgroupName;

        return $this;
    }

    /**
     * Gets wechatAdgroupId
     *
     * @return int
     */
    public function getWechatAdgroupId()
    {
        return $this->container['wechatAdgroupId'];
    }

    /**
     * Sets wechatAdgroupId
     *
     * @param int $wechatAdgroupId wechatAdgroupId
     *
     * @return $this
     */
    public function setWechatAdgroupId($wechatAdgroupId)
    {
        $this->container['wechatAdgroupId'] = $wechatAdgroupId;

        return $this;
    }

    /**
     * Gets leadSpecList
     *
     * @return \TencentAds\Model\LeadsInfoStruct[]
     */
    public function getLeadSpecList()
    {
        return $this->container['leadSpecList'];
    }

    /**
     * Sets leadSpecList
     *
     * @param \TencentAds\Model\LeadsInfoStruct[] $leadSpecList leadSpecList
     *
     * @return $this
     */
    public function setLeadSpecList($leadSpecList)
    {
        $this->container['leadSpecList'] = $leadSpecList;

        return $this;
    }

    /**
     * Gets wechatCampaignId
     *
     * @return int
     */
    public function getWechatCampaignId()
    {
        return $this->container['wechatCampaignId'];
    }

    /**
     * Sets wechatCampaignId
     *
     * @param int $wechatCampaignId wechatCampaignId
     *
     * @return $this
     */
    public function setWechatCampaignId($wechatCampaignId)
    {
        $this->container['wechatCampaignId'] = $wechatCampaignId;

        return $this;
    }

    /**
     * Gets wechatCampaignName
     *
     * @return string
     */
    public function getWechatCampaignName()
    {
        return $this->container['wechatCampaignName'];
    }

    /**
     * Sets wechatCampaignName
     *
     * @param string $wechatCampaignName wechatCampaignName
     *
     * @return $this
     */
    public function setWechatCampaignName($wechatCampaignName)
    {
        $this->container['wechatCampaignName'] = $wechatCampaignName;

        return $this;
    }

    /**
     * Gets wechatAdgroupName
     *
     * @return string
     */
    public function getWechatAdgroupName()
    {
        return $this->container['wechatAdgroupName'];
    }

    /**
     * Sets wechatAdgroupName
     *
     * @param string $wechatAdgroupName wechatAdgroupName
     *
     * @return $this
     */
    public function setWechatAdgroupName($wechatAdgroupName)
    {
        $this->container['wechatAdgroupName'] = $wechatAdgroupName;

        return $this;
    }

    /**
     * Gets wechatAgencyId
     *
     * @return string
     */
    public function getWechatAgencyId()
    {
        return $this->container['wechatAgencyId'];
    }

    /**
     * Sets wechatAgencyId
     *
     * @param string $wechatAgencyId wechatAgencyId
     *
     * @return $this
     */
    public function setWechatAgencyId($wechatAgencyId)
    {
        $this->container['wechatAgencyId'] = $wechatAgencyId;

        return $this;
    }

    /**
     * Gets wechatAgencyName
     *
     * @return string
     */
    public function getWechatAgencyName()
    {
        return $this->container['wechatAgencyName'];
    }

    /**
     * Sets wechatAgencyName
     *
     * @param string $wechatAgencyName wechatAgencyName
     *
     * @return $this
     */
    public function setWechatAgencyName($wechatAgencyName)
    {
        $this->container['wechatAgencyName'] = $wechatAgencyName;

        return $this;
    }

    /**
     * Gets clickId
     *
     * @return string
     */
    public function getClickId()
    {
        return $this->container['clickId'];
    }

    /**
     * Sets clickId
     *
     * @param string $clickId clickId
     *
     * @return $this
     */
    public function setClickId($clickId)
    {
        $this->container['clickId'] = $clickId;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


