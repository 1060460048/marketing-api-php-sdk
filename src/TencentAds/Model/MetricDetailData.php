<?php
/**
 * MetricDetailData
 *
 * PHP version 5
 *
 * @category Class
 * @package  TencentAds
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Marketing API
 *
 * Marketing API
 *
 * OpenAPI spec version: 1.3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.13
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace TencentAds\Model;

use \ArrayAccess;
use \TencentAds\ObjectSerializer;

/**
 * MetricDetailData Class Doc Comment
 *
 * @category Class
 * @description 报表效果数据
 * @package  TencentAds
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class MetricDetailData implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'metric_detail_data';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'cost' => 'int',
        'viewCount' => 'int',
        'validClickCount' => 'int',
        'ctr' => 'double',
        'orderCount' => 'int',
        'webOrderCost' => 'int',
        'orderRoi' => 'double',
        'channelsVideoPlayPv' => 'int',
        'channelsVideoPlayTime' => 'int',
        'channelsHeartPv' => 'int',
        'channelsHeartDedupPv' => 'int',
        'channelsCommentPv' => 'int',
        'channelsCommentUv' => 'int',
        'channelsSharePv' => 'int',
        'channelsShareUv' => 'int',
        'channelsFollowPv' => 'int',
        'channelsFollowDedupPv' => 'int',
        'channelsFeedsHeartPv' => 'int',
        'channelsFeedsHeartUv' => 'int',
        'channelsFeedsCommentPv' => 'int',
        'channelsFeedsSharePv' => 'int',
        'channelsFeedsVideoPlayPv' => 'int',
        'expPv' => 'int',
        'canvasCpnCouponsGetPv' => 'int',
        'canvasCpnCouponsCost' => 'int',
        'canvasCpnCouponsUsePv' => 'int',
        'purchase' => 'int'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'cost' => 'int64',
        'viewCount' => 'int64',
        'validClickCount' => 'int64',
        'ctr' => 'double',
        'orderCount' => 'int64',
        'webOrderCost' => 'int64',
        'orderRoi' => 'double',
        'channelsVideoPlayPv' => 'int64',
        'channelsVideoPlayTime' => 'int64',
        'channelsHeartPv' => 'int64',
        'channelsHeartDedupPv' => 'int64',
        'channelsCommentPv' => 'int64',
        'channelsCommentUv' => 'int64',
        'channelsSharePv' => 'int64',
        'channelsShareUv' => 'int64',
        'channelsFollowPv' => 'int64',
        'channelsFollowDedupPv' => 'int64',
        'channelsFeedsHeartPv' => 'int64',
        'channelsFeedsHeartUv' => 'int64',
        'channelsFeedsCommentPv' => 'int64',
        'channelsFeedsSharePv' => 'int64',
        'channelsFeedsVideoPlayPv' => 'int64',
        'expPv' => 'int64',
        'canvasCpnCouponsGetPv' => 'int64',
        'canvasCpnCouponsCost' => 'int64',
        'canvasCpnCouponsUsePv' => 'int64',
        'purchase' => 'int64'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'cost' => 'cost',
        'viewCount' => 'view_count',
        'validClickCount' => 'valid_click_count',
        'ctr' => 'ctr',
        'orderCount' => 'order_count',
        'webOrderCost' => 'web_order_cost',
        'orderRoi' => 'order_roi',
        'channelsVideoPlayPv' => 'channels_video_play_pv',
        'channelsVideoPlayTime' => 'channels_video_play_time',
        'channelsHeartPv' => 'channels_heart_pv',
        'channelsHeartDedupPv' => 'channels_heart_dedup_pv',
        'channelsCommentPv' => 'channels_comment_pv',
        'channelsCommentUv' => 'channels_comment_uv',
        'channelsSharePv' => 'channels_share_pv',
        'channelsShareUv' => 'channels_share_uv',
        'channelsFollowPv' => 'channels_follow_pv',
        'channelsFollowDedupPv' => 'channels_follow_dedup_pv',
        'channelsFeedsHeartPv' => 'channels_feeds_heart_pv',
        'channelsFeedsHeartUv' => 'channels_feeds_heart_uv',
        'channelsFeedsCommentPv' => 'channels_feeds_comment_pv',
        'channelsFeedsSharePv' => 'channels_feeds_share_pv',
        'channelsFeedsVideoPlayPv' => 'channels_feeds_video_play_pv',
        'expPv' => 'exp_pv',
        'canvasCpnCouponsGetPv' => 'canvas_cpn_coupons_get_pv',
        'canvasCpnCouponsCost' => 'canvas_cpn_coupons_cost',
        'canvasCpnCouponsUsePv' => 'canvas_cpn_coupons_use_pv',
        'purchase' => 'purchase'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'cost' => 'setCost',
        'viewCount' => 'setViewCount',
        'validClickCount' => 'setValidClickCount',
        'ctr' => 'setCtr',
        'orderCount' => 'setOrderCount',
        'webOrderCost' => 'setWebOrderCost',
        'orderRoi' => 'setOrderRoi',
        'channelsVideoPlayPv' => 'setChannelsVideoPlayPv',
        'channelsVideoPlayTime' => 'setChannelsVideoPlayTime',
        'channelsHeartPv' => 'setChannelsHeartPv',
        'channelsHeartDedupPv' => 'setChannelsHeartDedupPv',
        'channelsCommentPv' => 'setChannelsCommentPv',
        'channelsCommentUv' => 'setChannelsCommentUv',
        'channelsSharePv' => 'setChannelsSharePv',
        'channelsShareUv' => 'setChannelsShareUv',
        'channelsFollowPv' => 'setChannelsFollowPv',
        'channelsFollowDedupPv' => 'setChannelsFollowDedupPv',
        'channelsFeedsHeartPv' => 'setChannelsFeedsHeartPv',
        'channelsFeedsHeartUv' => 'setChannelsFeedsHeartUv',
        'channelsFeedsCommentPv' => 'setChannelsFeedsCommentPv',
        'channelsFeedsSharePv' => 'setChannelsFeedsSharePv',
        'channelsFeedsVideoPlayPv' => 'setChannelsFeedsVideoPlayPv',
        'expPv' => 'setExpPv',
        'canvasCpnCouponsGetPv' => 'setCanvasCpnCouponsGetPv',
        'canvasCpnCouponsCost' => 'setCanvasCpnCouponsCost',
        'canvasCpnCouponsUsePv' => 'setCanvasCpnCouponsUsePv',
        'purchase' => 'setPurchase'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'cost' => 'getCost',
        'viewCount' => 'getViewCount',
        'validClickCount' => 'getValidClickCount',
        'ctr' => 'getCtr',
        'orderCount' => 'getOrderCount',
        'webOrderCost' => 'getWebOrderCost',
        'orderRoi' => 'getOrderRoi',
        'channelsVideoPlayPv' => 'getChannelsVideoPlayPv',
        'channelsVideoPlayTime' => 'getChannelsVideoPlayTime',
        'channelsHeartPv' => 'getChannelsHeartPv',
        'channelsHeartDedupPv' => 'getChannelsHeartDedupPv',
        'channelsCommentPv' => 'getChannelsCommentPv',
        'channelsCommentUv' => 'getChannelsCommentUv',
        'channelsSharePv' => 'getChannelsSharePv',
        'channelsShareUv' => 'getChannelsShareUv',
        'channelsFollowPv' => 'getChannelsFollowPv',
        'channelsFollowDedupPv' => 'getChannelsFollowDedupPv',
        'channelsFeedsHeartPv' => 'getChannelsFeedsHeartPv',
        'channelsFeedsHeartUv' => 'getChannelsFeedsHeartUv',
        'channelsFeedsCommentPv' => 'getChannelsFeedsCommentPv',
        'channelsFeedsSharePv' => 'getChannelsFeedsSharePv',
        'channelsFeedsVideoPlayPv' => 'getChannelsFeedsVideoPlayPv',
        'expPv' => 'getExpPv',
        'canvasCpnCouponsGetPv' => 'getCanvasCpnCouponsGetPv',
        'canvasCpnCouponsCost' => 'getCanvasCpnCouponsCost',
        'canvasCpnCouponsUsePv' => 'getCanvasCpnCouponsUsePv',
        'purchase' => 'getPurchase'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['cost'] = isset($data['cost']) ? $data['cost'] : null;
        $this->container['viewCount'] = isset($data['viewCount']) ? $data['viewCount'] : null;
        $this->container['validClickCount'] = isset($data['validClickCount']) ? $data['validClickCount'] : null;
        $this->container['ctr'] = isset($data['ctr']) ? $data['ctr'] : null;
        $this->container['orderCount'] = isset($data['orderCount']) ? $data['orderCount'] : null;
        $this->container['webOrderCost'] = isset($data['webOrderCost']) ? $data['webOrderCost'] : null;
        $this->container['orderRoi'] = isset($data['orderRoi']) ? $data['orderRoi'] : null;
        $this->container['channelsVideoPlayPv'] = isset($data['channelsVideoPlayPv']) ? $data['channelsVideoPlayPv'] : null;
        $this->container['channelsVideoPlayTime'] = isset($data['channelsVideoPlayTime']) ? $data['channelsVideoPlayTime'] : null;
        $this->container['channelsHeartPv'] = isset($data['channelsHeartPv']) ? $data['channelsHeartPv'] : null;
        $this->container['channelsHeartDedupPv'] = isset($data['channelsHeartDedupPv']) ? $data['channelsHeartDedupPv'] : null;
        $this->container['channelsCommentPv'] = isset($data['channelsCommentPv']) ? $data['channelsCommentPv'] : null;
        $this->container['channelsCommentUv'] = isset($data['channelsCommentUv']) ? $data['channelsCommentUv'] : null;
        $this->container['channelsSharePv'] = isset($data['channelsSharePv']) ? $data['channelsSharePv'] : null;
        $this->container['channelsShareUv'] = isset($data['channelsShareUv']) ? $data['channelsShareUv'] : null;
        $this->container['channelsFollowPv'] = isset($data['channelsFollowPv']) ? $data['channelsFollowPv'] : null;
        $this->container['channelsFollowDedupPv'] = isset($data['channelsFollowDedupPv']) ? $data['channelsFollowDedupPv'] : null;
        $this->container['channelsFeedsHeartPv'] = isset($data['channelsFeedsHeartPv']) ? $data['channelsFeedsHeartPv'] : null;
        $this->container['channelsFeedsHeartUv'] = isset($data['channelsFeedsHeartUv']) ? $data['channelsFeedsHeartUv'] : null;
        $this->container['channelsFeedsCommentPv'] = isset($data['channelsFeedsCommentPv']) ? $data['channelsFeedsCommentPv'] : null;
        $this->container['channelsFeedsSharePv'] = isset($data['channelsFeedsSharePv']) ? $data['channelsFeedsSharePv'] : null;
        $this->container['channelsFeedsVideoPlayPv'] = isset($data['channelsFeedsVideoPlayPv']) ? $data['channelsFeedsVideoPlayPv'] : null;
        $this->container['expPv'] = isset($data['expPv']) ? $data['expPv'] : null;
        $this->container['canvasCpnCouponsGetPv'] = isset($data['canvasCpnCouponsGetPv']) ? $data['canvasCpnCouponsGetPv'] : null;
        $this->container['canvasCpnCouponsCost'] = isset($data['canvasCpnCouponsCost']) ? $data['canvasCpnCouponsCost'] : null;
        $this->container['canvasCpnCouponsUsePv'] = isset($data['canvasCpnCouponsUsePv']) ? $data['canvasCpnCouponsUsePv'] : null;
        $this->container['purchase'] = isset($data['purchase']) ? $data['purchase'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets cost
     *
     * @return int
     */
    public function getCost()
    {
        return $this->container['cost'];
    }

    /**
     * Sets cost
     *
     * @param int $cost cost
     *
     * @return $this
     */
    public function setCost($cost)
    {
        $this->container['cost'] = $cost;

        return $this;
    }

    /**
     * Gets viewCount
     *
     * @return int
     */
    public function getViewCount()
    {
        return $this->container['viewCount'];
    }

    /**
     * Sets viewCount
     *
     * @param int $viewCount viewCount
     *
     * @return $this
     */
    public function setViewCount($viewCount)
    {
        $this->container['viewCount'] = $viewCount;

        return $this;
    }

    /**
     * Gets validClickCount
     *
     * @return int
     */
    public function getValidClickCount()
    {
        return $this->container['validClickCount'];
    }

    /**
     * Sets validClickCount
     *
     * @param int $validClickCount validClickCount
     *
     * @return $this
     */
    public function setValidClickCount($validClickCount)
    {
        $this->container['validClickCount'] = $validClickCount;

        return $this;
    }

    /**
     * Gets ctr
     *
     * @return double
     */
    public function getCtr()
    {
        return $this->container['ctr'];
    }

    /**
     * Sets ctr
     *
     * @param double $ctr ctr
     *
     * @return $this
     */
    public function setCtr($ctr)
    {
        $this->container['ctr'] = $ctr;

        return $this;
    }

    /**
     * Gets orderCount
     *
     * @return int
     */
    public function getOrderCount()
    {
        return $this->container['orderCount'];
    }

    /**
     * Sets orderCount
     *
     * @param int $orderCount orderCount
     *
     * @return $this
     */
    public function setOrderCount($orderCount)
    {
        $this->container['orderCount'] = $orderCount;

        return $this;
    }

    /**
     * Gets webOrderCost
     *
     * @return int
     */
    public function getWebOrderCost()
    {
        return $this->container['webOrderCost'];
    }

    /**
     * Sets webOrderCost
     *
     * @param int $webOrderCost webOrderCost
     *
     * @return $this
     */
    public function setWebOrderCost($webOrderCost)
    {
        $this->container['webOrderCost'] = $webOrderCost;

        return $this;
    }

    /**
     * Gets orderRoi
     *
     * @return double
     */
    public function getOrderRoi()
    {
        return $this->container['orderRoi'];
    }

    /**
     * Sets orderRoi
     *
     * @param double $orderRoi orderRoi
     *
     * @return $this
     */
    public function setOrderRoi($orderRoi)
    {
        $this->container['orderRoi'] = $orderRoi;

        return $this;
    }

    /**
     * Gets channelsVideoPlayPv
     *
     * @return int
     */
    public function getChannelsVideoPlayPv()
    {
        return $this->container['channelsVideoPlayPv'];
    }

    /**
     * Sets channelsVideoPlayPv
     *
     * @param int $channelsVideoPlayPv channelsVideoPlayPv
     *
     * @return $this
     */
    public function setChannelsVideoPlayPv($channelsVideoPlayPv)
    {
        $this->container['channelsVideoPlayPv'] = $channelsVideoPlayPv;

        return $this;
    }

    /**
     * Gets channelsVideoPlayTime
     *
     * @return int
     */
    public function getChannelsVideoPlayTime()
    {
        return $this->container['channelsVideoPlayTime'];
    }

    /**
     * Sets channelsVideoPlayTime
     *
     * @param int $channelsVideoPlayTime channelsVideoPlayTime
     *
     * @return $this
     */
    public function setChannelsVideoPlayTime($channelsVideoPlayTime)
    {
        $this->container['channelsVideoPlayTime'] = $channelsVideoPlayTime;

        return $this;
    }

    /**
     * Gets channelsHeartPv
     *
     * @return int
     */
    public function getChannelsHeartPv()
    {
        return $this->container['channelsHeartPv'];
    }

    /**
     * Sets channelsHeartPv
     *
     * @param int $channelsHeartPv channelsHeartPv
     *
     * @return $this
     */
    public function setChannelsHeartPv($channelsHeartPv)
    {
        $this->container['channelsHeartPv'] = $channelsHeartPv;

        return $this;
    }

    /**
     * Gets channelsHeartDedupPv
     *
     * @return int
     */
    public function getChannelsHeartDedupPv()
    {
        return $this->container['channelsHeartDedupPv'];
    }

    /**
     * Sets channelsHeartDedupPv
     *
     * @param int $channelsHeartDedupPv channelsHeartDedupPv
     *
     * @return $this
     */
    public function setChannelsHeartDedupPv($channelsHeartDedupPv)
    {
        $this->container['channelsHeartDedupPv'] = $channelsHeartDedupPv;

        return $this;
    }

    /**
     * Gets channelsCommentPv
     *
     * @return int
     */
    public function getChannelsCommentPv()
    {
        return $this->container['channelsCommentPv'];
    }

    /**
     * Sets channelsCommentPv
     *
     * @param int $channelsCommentPv channelsCommentPv
     *
     * @return $this
     */
    public function setChannelsCommentPv($channelsCommentPv)
    {
        $this->container['channelsCommentPv'] = $channelsCommentPv;

        return $this;
    }

    /**
     * Gets channelsCommentUv
     *
     * @return int
     */
    public function getChannelsCommentUv()
    {
        return $this->container['channelsCommentUv'];
    }

    /**
     * Sets channelsCommentUv
     *
     * @param int $channelsCommentUv channelsCommentUv
     *
     * @return $this
     */
    public function setChannelsCommentUv($channelsCommentUv)
    {
        $this->container['channelsCommentUv'] = $channelsCommentUv;

        return $this;
    }

    /**
     * Gets channelsSharePv
     *
     * @return int
     */
    public function getChannelsSharePv()
    {
        return $this->container['channelsSharePv'];
    }

    /**
     * Sets channelsSharePv
     *
     * @param int $channelsSharePv channelsSharePv
     *
     * @return $this
     */
    public function setChannelsSharePv($channelsSharePv)
    {
        $this->container['channelsSharePv'] = $channelsSharePv;

        return $this;
    }

    /**
     * Gets channelsShareUv
     *
     * @return int
     */
    public function getChannelsShareUv()
    {
        return $this->container['channelsShareUv'];
    }

    /**
     * Sets channelsShareUv
     *
     * @param int $channelsShareUv channelsShareUv
     *
     * @return $this
     */
    public function setChannelsShareUv($channelsShareUv)
    {
        $this->container['channelsShareUv'] = $channelsShareUv;

        return $this;
    }

    /**
     * Gets channelsFollowPv
     *
     * @return int
     */
    public function getChannelsFollowPv()
    {
        return $this->container['channelsFollowPv'];
    }

    /**
     * Sets channelsFollowPv
     *
     * @param int $channelsFollowPv channelsFollowPv
     *
     * @return $this
     */
    public function setChannelsFollowPv($channelsFollowPv)
    {
        $this->container['channelsFollowPv'] = $channelsFollowPv;

        return $this;
    }

    /**
     * Gets channelsFollowDedupPv
     *
     * @return int
     */
    public function getChannelsFollowDedupPv()
    {
        return $this->container['channelsFollowDedupPv'];
    }

    /**
     * Sets channelsFollowDedupPv
     *
     * @param int $channelsFollowDedupPv channelsFollowDedupPv
     *
     * @return $this
     */
    public function setChannelsFollowDedupPv($channelsFollowDedupPv)
    {
        $this->container['channelsFollowDedupPv'] = $channelsFollowDedupPv;

        return $this;
    }

    /**
     * Gets channelsFeedsHeartPv
     *
     * @return int
     */
    public function getChannelsFeedsHeartPv()
    {
        return $this->container['channelsFeedsHeartPv'];
    }

    /**
     * Sets channelsFeedsHeartPv
     *
     * @param int $channelsFeedsHeartPv channelsFeedsHeartPv
     *
     * @return $this
     */
    public function setChannelsFeedsHeartPv($channelsFeedsHeartPv)
    {
        $this->container['channelsFeedsHeartPv'] = $channelsFeedsHeartPv;

        return $this;
    }

    /**
     * Gets channelsFeedsHeartUv
     *
     * @return int
     */
    public function getChannelsFeedsHeartUv()
    {
        return $this->container['channelsFeedsHeartUv'];
    }

    /**
     * Sets channelsFeedsHeartUv
     *
     * @param int $channelsFeedsHeartUv channelsFeedsHeartUv
     *
     * @return $this
     */
    public function setChannelsFeedsHeartUv($channelsFeedsHeartUv)
    {
        $this->container['channelsFeedsHeartUv'] = $channelsFeedsHeartUv;

        return $this;
    }

    /**
     * Gets channelsFeedsCommentPv
     *
     * @return int
     */
    public function getChannelsFeedsCommentPv()
    {
        return $this->container['channelsFeedsCommentPv'];
    }

    /**
     * Sets channelsFeedsCommentPv
     *
     * @param int $channelsFeedsCommentPv channelsFeedsCommentPv
     *
     * @return $this
     */
    public function setChannelsFeedsCommentPv($channelsFeedsCommentPv)
    {
        $this->container['channelsFeedsCommentPv'] = $channelsFeedsCommentPv;

        return $this;
    }

    /**
     * Gets channelsFeedsSharePv
     *
     * @return int
     */
    public function getChannelsFeedsSharePv()
    {
        return $this->container['channelsFeedsSharePv'];
    }

    /**
     * Sets channelsFeedsSharePv
     *
     * @param int $channelsFeedsSharePv channelsFeedsSharePv
     *
     * @return $this
     */
    public function setChannelsFeedsSharePv($channelsFeedsSharePv)
    {
        $this->container['channelsFeedsSharePv'] = $channelsFeedsSharePv;

        return $this;
    }

    /**
     * Gets channelsFeedsVideoPlayPv
     *
     * @return int
     */
    public function getChannelsFeedsVideoPlayPv()
    {
        return $this->container['channelsFeedsVideoPlayPv'];
    }

    /**
     * Sets channelsFeedsVideoPlayPv
     *
     * @param int $channelsFeedsVideoPlayPv channelsFeedsVideoPlayPv
     *
     * @return $this
     */
    public function setChannelsFeedsVideoPlayPv($channelsFeedsVideoPlayPv)
    {
        $this->container['channelsFeedsVideoPlayPv'] = $channelsFeedsVideoPlayPv;

        return $this;
    }

    /**
     * Gets expPv
     *
     * @return int
     */
    public function getExpPv()
    {
        return $this->container['expPv'];
    }

    /**
     * Sets expPv
     *
     * @param int $expPv expPv
     *
     * @return $this
     */
    public function setExpPv($expPv)
    {
        $this->container['expPv'] = $expPv;

        return $this;
    }

    /**
     * Gets canvasCpnCouponsGetPv
     *
     * @return int
     */
    public function getCanvasCpnCouponsGetPv()
    {
        return $this->container['canvasCpnCouponsGetPv'];
    }

    /**
     * Sets canvasCpnCouponsGetPv
     *
     * @param int $canvasCpnCouponsGetPv canvasCpnCouponsGetPv
     *
     * @return $this
     */
    public function setCanvasCpnCouponsGetPv($canvasCpnCouponsGetPv)
    {
        $this->container['canvasCpnCouponsGetPv'] = $canvasCpnCouponsGetPv;

        return $this;
    }

    /**
     * Gets canvasCpnCouponsCost
     *
     * @return int
     */
    public function getCanvasCpnCouponsCost()
    {
        return $this->container['canvasCpnCouponsCost'];
    }

    /**
     * Sets canvasCpnCouponsCost
     *
     * @param int $canvasCpnCouponsCost canvasCpnCouponsCost
     *
     * @return $this
     */
    public function setCanvasCpnCouponsCost($canvasCpnCouponsCost)
    {
        $this->container['canvasCpnCouponsCost'] = $canvasCpnCouponsCost;

        return $this;
    }

    /**
     * Gets canvasCpnCouponsUsePv
     *
     * @return int
     */
    public function getCanvasCpnCouponsUsePv()
    {
        return $this->container['canvasCpnCouponsUsePv'];
    }

    /**
     * Sets canvasCpnCouponsUsePv
     *
     * @param int $canvasCpnCouponsUsePv canvasCpnCouponsUsePv
     *
     * @return $this
     */
    public function setCanvasCpnCouponsUsePv($canvasCpnCouponsUsePv)
    {
        $this->container['canvasCpnCouponsUsePv'] = $canvasCpnCouponsUsePv;

        return $this;
    }

    /**
     * Gets purchase
     *
     * @return int
     */
    public function getPurchase()
    {
        return $this->container['purchase'];
    }

    /**
     * Sets purchase
     *
     * @param int $purchase purchase
     *
     * @return $this
     */
    public function setPurchase($purchase)
    {
        $this->container['purchase'] = $purchase;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


